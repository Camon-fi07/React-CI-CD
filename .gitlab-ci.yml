stages:
  - install
  - build
  - test
  - deploy
  # - rollback
  # - release

.install:
  image: node:latest
  stage: install

build-job:
  stage: build
  extends: .install
  tags:
    - react
    - ts
  script:
    - echo "Start build"
    - docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/test_project:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE/test_project:$CI_COMMIT_REF_NAME
    # - npm install
    # - npm run build
  artifacts:
    paths:
      - dist/

lint-test-job:
  stage: test
  extends: .install
  tags:
    - react
    - ts
  script:
    - echo "Lint"
    - npm install
    - npm run lint
  only:
    changes:
      - "src/"

deploy-job:
  stage: deploy
  # extends: .install
  tags:
    - deploy
  script:
    - docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/test_project
    - docker run -d test_project -p 80:80 $CI_REGISTRY_IMAGE/test_project:$CI_COMMIT_REF_NAME
  after_script:
    - 'curl -X POST -H "Content-type: application/json" --data ''{"content":"Deployment job completed!"}'' $DISCORD_WEBHOOK'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - exists:
        - $DISCORD_WEBHOOK
  needs:
    - build-job
# rollback-job:
#   stage: rollback
#   extends: .install
#   tags:
#     - deploy
#     - linux
#   script:
#     - $PREVIOUS_TAG = git describe --abbrev=0 --tags HEAD^
#     - git checkout $PREVIOUS_TAG
#     - npm install
#     - npm run preview &
#     - 'curl -X POST -H "Content-type: application/json" --data ''{"content":"Rollback job completed!"}'' $DISCORD_WEBHOOK'
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: manual
#   needs:
#     - deploy-job

# release_job:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest
#   rules:
#     - if: $CI_COMMIT_TAG
#       when: never
#     - if: '$CI_COMMIT_BRANCH == "master"'
#   script:
#     - echo "running release_job"
#   release:
#     tag_name: "v0.$CI_PIPELINE_IID"
#     description: "$CI_PIPELINE_IID"
#     ref: "$CI_COMMIT_SHA"
#   needs:
#     - deploy-job
