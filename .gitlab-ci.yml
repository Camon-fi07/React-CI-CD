stages:
  - install
  - build
  - test
  - deploy
  - rollback
  - release

.install:
  image: node:latest
  stage: install

build-job:
  stage: build
  extends: .install
  tags:
    - react
    - ts
  only:
    changes:
      - "src/"
  script:
    - echo "Start build"
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/

lint-test-job:
  stage: test
  extends: .install
  tags:
    - react
    - ts
  script:
    - echo "Lint"
    - npm install
    - npm run lint

deploy-job:
  stage: deploy
  extends: .install
  tags:
    - deploy
  script:
    - npm install
    - mv dist dist/backup
    - npm run preview &
    - 'curl -X POST -H "Content-type: application/json" --data ''{"content":"Deployment job completed!"}'' $DISCORD_WEBHOOK'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - exists:
        - $DISCORD_WEBHOOK
  needs:
    - lint-test-job

rollback-job:
  stage: rollback
  extends: .install
  tags:
    - deploy
  script:
    - echo "Rollback to the previous successful build"
    - mv dist/backup/* dist/
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - exists:
        - dist/backup/
  needs:
    - deploy-job

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - echo "running release_job"
  release:
    tag_name: "v0.$CI_PIPELINE_IID"
    description: "$CI_PIPELINE_IID"
    ref: "$CI_COMMIT_SHA"
  needs:
    - deploy-job
