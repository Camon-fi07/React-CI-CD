stages:
  - install
  - build
  - test
  - deploy
  - rollback
  - release

build-job:
  stage: build
  tags:
    - react
    - ts
  script:
    - echo "Start build $CI_REGISTRY_USER"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/test_project:v0.$CI_PIPELINE_IID .
    - docker push $CI_REGISTRY_IMAGE/test_project:v0.$CI_PIPELINE_IID
  artifacts:
    paths:
      - dist/

lint-test-job:
  stage: test
  image: node:latest
  tags:
    - react
    - ts
  script:
    - echo "Lint"
    - npm install
    - npm run lint
  only:
    changes:
      - "src/"

deploy-job:
  stage: deploy
  tags:
    - deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker stop $(docker ps -a -q)
    - docker pull $CI_REGISTRY_IMAGE/test_project:v0.$CI_PIPELINE_IID
    - docker run -d -p 80:80 $CI_REGISTRY_IMAGE/test_project:v0.$CI_PIPELINE_IID
    - 'curl -X POST -H "Content-type: application/json" --data ''{"content":"Deployment job completed!"}'' $DISCORD_WEBHOOK'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - exists:
        - $DISCORD_WEBHOOK
  needs:
    - build-job

rollback-job:
  stage: rollback
  tags:
    - deploy
  script:
    - $PREVIOUS_TAG = $(git describe --abbrev=0 --tags HEAD)^
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker stop $(docker ps -a -q)
    - docker pull $CI_REGISTRY_IMAGE/test_project:$PREVIOUS_TAG
    - docker run -d -p 80:80 $CI_REGISTRY_IMAGE/test_project:$PREVIOUS_TAG
    - git checkout $PREVIOUS_TAG
    - 'curl -X POST -H "Content-type: application/json" --data ''{"content":"Rollback job completed!"}'' $DISCORD_WEBHOOK'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
  needs:
    - deploy-job

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - echo "running release_job"
  release:
    tag_name: "v0.$CI_PIPELINE_IID"
    description: "$CI_PIPELINE_IID"
    ref: "$CI_COMMIT_SHA"
  needs:
    - deploy-job
